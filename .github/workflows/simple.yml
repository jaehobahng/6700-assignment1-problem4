# name: corpus-workflow

# on: [push, pull_request]

# jobs:
#   ci:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Set up Python 3.11
#       uses: actions/setup-python@v4
#       with:
#         python-version: 3.11

#     - name: Access repository
#       uses: actions/checkout@v4

#     - name: Install poetry
#       uses: snok/install-poetry@v1

#     - name: Install package
#       run: poetry install

#     - name: Build documentation
#       run: poetry run make html --directory docs/

#     - name: Save Module
#       run: poetry run python -m iris
    
#     - name: run pytest
#       run: poetry run pytest






name: iris-workflow

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    #Cache Python dependencies
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/.virtualenvs
        key: poetry-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-

    - name: Access repository
      uses: actions/checkout@v4


    
    # - name: Install poetry
    #   if: steps.poetry-cache.outputs.cache-hit != 'true'
    #   uses: snok/install-poetry@v1

    # - name: Cache Poetry installation
    #   id: poetry-cache  # Assigning ID for cache-hit reference
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.poetry
    #     key: poetry-install-${{ runner.os }}
    #     restore-keys: |
    #       poetry-install-


    - name: Install poetry
      uses: snok/install-poetry@v1

    # Install package dependencies (cached)
    - name: Install package
      run: poetry install --no-root

    # Cache pre-trained model
    - name: Cache pre-trained model
      uses: actions/cache@v3
      with:
        path: ./model.pkl  # Adjust path to where the model is stored
        key: model-${{ runner.os }}-${{ hashFiles('./model.pkl') }}
        restore-keys: |
          model-${{ runner.os }}-

    - name: Run pre-trained model
      # run: poetry run python -m iris
      run: poetry run python -c "import pickle; model = pickle.load(open('./model.pkl', 'rb')); print('Model loaded')"

    - name: Build documentation
      run: poetry run make html --directory docs/


    # Add step to configure Git
    - name: Configure Git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Add upstream remote
      run: |
        git remote add upstream https://${{ secrets.PAT_FOR_PRIVATE_REPO }}@github.com/jaehobahng/6700-assignment1-problem4.git

    # Add step to commit changes
    - name: Commit changes
      run: |
        git add docs/
        git commit -m "Update documentation"

    # Add step to push changes back to repository
    - name: Push changes
      run: git push origin main
      # uses: ad-m/github-push-action@v0.6.0
      # with:
      #   github_token: ${{ secrets.PAT_FOR_PRIVATE_REPO }}

    - name: Run pytest
      run: poetry run pytest

      